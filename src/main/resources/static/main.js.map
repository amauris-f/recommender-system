{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/login-form/login-form.component.css","webpack:///./src/app/login-form/login-form.component.html","webpack:///./src/app/login-form/login-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".navbar {\\r\\n  background-color: #CF1E00;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class=\\\"navbar sticky-top navbar-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Food Recommender System</a>\\n</nav>\\n\\n<app-login-form *ngIf=\\\"!isAuthenticated(); else helloTemplate \\\"></app-login-form>\\n<ng-template #helloTemplate>\\n  <div>\\n    <h1>Hello User!</h1>\\n  </div>\\n</ng-template>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n\n\n  public isAuthenticated() : boolean {\n    if (document.cookie.indexOf(\"JSESSION\") >= 0){\n      return true;\n    }\n    localStorage.removeItem(\"user\");\n    return false;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { LoginModel } from './login-model';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { User } from './user';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private loginUrl = '/login'\n  private user : User;\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n    })\n  };\n  constructor(private httpClient : HttpClient) { }\n\n  login(login : LoginModel) : Observable<User>{\n    return this.httpClient.post<User>(this.loginUrl, login, this.httpOptions);\n  }\n}\n","module.exports = \".jumbotron {\\r\\n  /* background: url(\\\"\\\"); */\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  min-height: 600px;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  background-color: white;\\r\\n  border-radius: 2%;\\r\\n}\\r\\n\\r\\n.container > button, p{\\r\\n  display: inline-block;\\r\\n  justify-content: space-between;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container w-25 p-3\\\">\\n    <h1> Sign In</h1>\\n    <form (ngSubmit)=\\\"onSubmit(login)\\\" #login=\\\"ngForm\\\" ngNativeValidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input name=\\\"username\\\" ngModel type=\\\"text\\\" class=\\\"form-control\\\" required>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input name=\\\"password\\\" ngModel type=\\\"password\\\" class=\\\"form-control\\\" required>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign in</button> \\n      <p>or <a href=\\\"#\\\">Sign up</a></p>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n\n  constructor(private authenticationService: AuthenticationService) { }\n  private user : User;\n\n  ngOnInit() {\n  }\n\n  onSubmit(ngform : NgForm){\n    this.authenticationService.login(ngform.value).subscribe(user =>{\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}