{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api-services/review.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login-form/login-form.component.css","webpack:///./src/app/login-form/login-form.component.html","webpack:///./src/app/login-form/login-form.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Review } from '../review';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewService {\n  \n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\n  private urlPath = '/api/review/';\n\n  getRecentReviews(): Observable<Review[]>{\n    var userId = this.authService.getUser().id;\n    const url = this.urlPath + `recent/${userId}`;\n    return this.http.get<Review[]>(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuardService } from './auth-guard.service';\n\nconst routes:  Routes = [\n  { path: 'login', component: LoginFormComponent },\n  { path: '', component: DashboardComponent,  canActivate: [AuthGuardService] }\n] \n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".jumbotron {\\r\\n  padding-top: 0px;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n\n\n  public isAuthenticated() : boolean {\n    if (document.cookie.indexOf(\"JSESSION\") >= 0){\n      return true;\n    }\n    localStorage.removeItem(\"user\");\n    return false;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n    NavbarComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authenticationService : AuthenticationService, private router : Router) { }\n\n  canActivate(): boolean {\n    if(!this.authenticationService.isAuthenticated()){\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoginModel } from './login-model';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { User } from './user';\nimport { Observable, of, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private loginUrl = '/login'\n  public user : User;\n  private userSub: Subject<User> = new Subject<User>();\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n    })\n  };\n  constructor(private httpClient : HttpClient) {\n    this.userSub.subscribe(newUser=>{\n      this.user = newUser\n    });\n   }\n\n  login(login : LoginModel) : Observable<User>{\n    return this.httpClient.post<User>(this.loginUrl, login, this.httpOptions);\n  }\n\n  isAuthenticated() : Boolean {\n    if (document.cookie.indexOf(\"JSESSION\") >= 0){\n      this.userSub.next(JSON.parse(localStorage.getItem(\"user\")) as User);\n      return true;\n    }\n    localStorage.removeItem(\"user\");\n    this.userSub.next(null);\n    return false;\n  }\n\n  getUser() : User{\n    return this.user;\n  }\n\n  logout(){\n    localStorage.removeItem(\"user\");\n    this.deleteCookie();\n    this.userSub.next(null);\n  }\n\n  private deleteCookie(){\n    document.cookie = \"JSESSION\" + '=;Path=/;Expires=Thu, 01 Jan 1970 00:00:01 GMT;'; \n  }\n}\n","module.exports = \"img {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.logo{\\r\\n  width: 50%;\\r\\n  height: 50%;\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4 card text-center\\\" *ngFor=\\\"let review of reviews\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"logo\\\">\\n          <img src=\\\"{{review.item.restaurant.logoPath}}\\\">\\n        </div>\\n        <h5 class=\\\"card-title\\\">{{review.item.name}}</h5>\\n        <p class=\\\"card-text\\\">{{review.rating}}</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { Review } from '../review';\nimport { ReviewService } from '../api-services/review.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  reviews: Review[];\n\n  constructor(private reviewService: ReviewService) {\n  }\n\n  ngOnInit() {\n    this.getRecentReviews();\n  }\n\n  getRecentReviews() {\n    this.reviewService.getRecentReviews().subscribe(reviews =>\n      this.reviews = reviews\n    );\n  }\n}","module.exports = \".jumbotron {\\r\\n  /* background: url(\\\"\\\"); */\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  min-height: 600px;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  background-color: white;\\r\\n  border-radius: 2%;\\r\\n}\\r\\n\\r\\n.container > button, p{\\r\\n  display: inline-block;\\r\\n  justify-content: space-between;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container w-25 p-3\\\">\\n    <h1> Sign In</h1>\\n    <form (ngSubmit)=\\\"onSubmit(login)\\\" #login=\\\"ngForm\\\" ngNativeValidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input name=\\\"username\\\" ngModel type=\\\"text\\\" class=\\\"form-control\\\" required>\\n      </div>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input name=\\\"password\\\" ngModel type=\\\"password\\\" class=\\\"form-control\\\" required>\\n      </div>\\n      <div class=\\\"row text-danger container\\\" *ngIf=\\\"message\\\">\\n        <p>{{message}}</p>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign in</button> \\n      <p>or <a href=\\\"#\\\">Sign up</a></p>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\nimport { NgForm } from '@angular/forms';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { ErrorResponseBody } from '../error-response-body';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n\n  constructor(private authenticationService: AuthenticationService, private router : Router) {   }\n  public message : String;\n\n  ngOnInit() {\n  }\n\n  onSubmit(ngform : NgForm){\n    this.authenticationService.login(ngform.value).subscribe(user =>{\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      this.router.navigate(['']);\n    },\n    (err: HttpErrorResponse) => {\n      if (err.status == 401){\n        var body = err.error as ErrorResponseBody;\n        this.message=body.message;\n      }\n    });\n  }\n\n}\n","module.exports = \".navbar {\\r\\n  background-color: #CF1E00;\\r\\n}\\r\\n\\r\\n\\r\\na.dropdown-toggle, a:hover.dropdown-toggle, a:visited.dropdown-toggle {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n\\r\\ndiv {\\r\\n  color: white;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Food Recommender System</a>\\n  <div *ngIf=\\\"authService.user != null\\\" class=\\\"dropdown show\\\">\\n    <a class=\\\"dropdown-toggle\\\" href=\\\"#\\\" role=\\\"button\\\" id=\\\"menu\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n      Hello, {{authService.user.username}}\\n    </a>\\n    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"menu\\\">\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"authService.logout()\\\" href=\\\"/\\\">Sign out</a>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  private user: User;\n  \n  constructor(public authService : AuthenticationService) { \n    this.user = authService.user;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}